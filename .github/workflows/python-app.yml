name: Python App

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: python-app-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

env:
  MAX_ZIP_MB: "10"
  MAX_FILES: "2000"
  INCLUDE_PATTERNS: |
    *.py
    *.ipynb
    pyproject.toml
    requirements*.txt

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip and optional deps
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML yamllint || true

      - name: Lint this workflow (self check)
        run: |
          yamllint .github/workflows/python-app.yml

      - name: Create source bundle (tracked + allowlist)
        id: bundle
        shell: bash
        run: |
          set -euo pipefail
          mapfile -t patterns < <(echo "${INCLUDE_PATTERNS}")
          include_args=()
          for p in "${patterns[@]}"; do
            [[ -z "$p" ]] && continue
            include_args+=( ":$p" )
          done
          # パターンが空でも安全に動くようにデフォルトを設定
          if [ ${#include_args[@]} -eq 0 ]; then
            include_args+=( ":*" )
          fi

          git archive --format=zip -o source.zip HEAD -- "${include_args[0]}"

          files=$(zipinfo -1 source.zip | wc -l | tr -d ' ')
          bytes=$(stat -c%s source.zip || stat -f%z source.zip)
          mb=$(( (bytes + 1048575) / 1048576 ))

          echo "files=$files bytes=$bytes (~${mb}MB)"

          if [ "$files" -gt "${MAX_FILES}" ]; then
            echo "Too many files: $files > ${MAX_FILES}"
            exit 1
          fi

          if [ "$mb" -gt "${MAX_ZIP_MB}" ]; then
            echo "Archive too large: ${mb}MB > ${MAX_ZIP_MB}MB"
            exit 1
          fi

          (command -v sha256sum >/dev/null && sha256sum source.zip) || shasum -a 256 source.zip

      - name: Install project (optional)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt || true
          fi

      - name: Run unit tests (optional)
        run: |
          if [ -d tests ]; then
            python -m unittest discover -v || true
          else
            echo "No tests/ directory; skipping."
          fi

      - name: Upload bundle artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-app-bundle
          path: |
            source.zip

      - name: Summary
        if: always()
        run: |
          echo "### ✅ python-app workflow finished" >> "$GITHUB_STEP_SUMMARY"
          echo "- Files in archive: ${{ steps.bundle.outputs.files || 'n/a' }}" >> "$GITHUB_STEP_SUMMARY"
